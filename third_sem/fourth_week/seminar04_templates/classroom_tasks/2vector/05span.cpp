/*
    std::span

    Шаблонный класс std::span это аналог класса std::string, но для векторая

        std::string     <-->   std::string_view
        std::vector<T>  <-->   std::spat<T>

    Он позволяет передавать элементы более эффективно, чем передача по ссылке.
    Внутри себя объекты этого класса содержат 2 поля: указатель на данный и размер "окошка".
    
    !!  В отличии от string_view класс span может менять элементы.
        Чтобы передать span, который не будет менять элементы нужно передавать span от const T:

            void func(std::span<const int> sp)

        Также как string_view, функции должны принимать объекты класса span по значению.


    В функции, принимающие std::span, можно передавать как вектора(std::vector), так и массивы(std::array).
*/

#include <iostream>
#include <vector>
#include <span>
#include <string>
using std::cout, std::endl;


void printElements(std::span<const int> sp)
{
    for (int i = 0; i < sp.size(); ++i)
        cout << sp[i] << " ";
    cout << endl;
}



int main()
{
    std::vector<int> v {10, 20, 30, 40, 50};
    std::array<int> v {10, 20, 30, 40, 50};

    printElements(v);
}


/*
    Задачи:

        1)  Напишите функцию inc, которая будет принимать std::span<int> по ссылке 
            и увеличивать все его элементы на 1.
            Протестируйте эту функцию в main передав её вектор v и массив a.

        2)  Напишите шаблонную функцию max, которая будет брать на вход std::span
            и возвращать максимальный элемент на диапазоне, заданом этим объектом.
            Данная функция должна работь с векторами, хранящим разные типы и массивами.

*/
