/*
    Методы reserve и resize

    Также как и у нашей строки String, у строки std::string есть методы reserve и resize.

        1)  reserve  -  увеличивает вместимость строки (capacity), на вход методу передаётся новая вместмость
                        если новая вместимость меньше старой, то ничего не происходит (вместимость не уменьшается)
                        размер и содержимое строки не меняется.
                        Вместимость указывается без учёта нулевого символа.


        2)  resize   -  изменяет размер строки (size), на вход методу передаётся новый размер
                        если новый размер меньше старого, то строка усекается.
                        При необходимости увеличивает вместимость.
                        Размер указывается без учёта нулевого символа.
*/

#include <iostream>
#include <string>
using std::cout, std::endl;


int main()
{
    std::string s;
    for (int i = 0; i < 300; ++i)
    {
        s += 'a' + i % 26;
        cout << "Size = " << s.size() << " Capacity = " << s.capacity() << endl;
    }

    cout << s << endl;
}

/*
    Задачи:

        В данном примере мы создаём пустую строку и добавляем в неё 300 символов в цикле.
        Во время цикла, при необходимости, память строки перевыделяется.
        Каждое выделение памяти требует времени и нам бы хотелось, чтобы их было как можно меньше.

        Измените эту программу так, чтобы происходило всего одно выделение памяти.
*/