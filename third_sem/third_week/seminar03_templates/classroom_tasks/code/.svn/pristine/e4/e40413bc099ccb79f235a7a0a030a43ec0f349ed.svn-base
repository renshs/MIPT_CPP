/*
    У класса std::string есть множество конструкторов:

        a)  Конструктор по умолчанию

        b)  Конструктор от C-строки (const char*)

        c)  Конструктор от C-строки и размера

        d)  Конструктор от числа и символа

        e)  Конструктор копирования (т. е. от std::string)

        f)  Конструктор от std::string, первого индекса подстроки и размера подстроки.
            Есть специальное значение для индекса - string::npos, которое означает конец строки.

        g)  Конструктор от двух указателей на char

        и есть ещё другие
*/

#include <iostream>
#include <string>
using std::cout, std::endl, std::string;



int main()
{
    string a;

    string b("Armadillo");

    string c("Elephant", 5);

    string d(50, 'q');

    string e(b);

    string f1(b, 4, 3);
    string f2(b, 4, string::npos);


    char* begin = &b[1];
    char* end   = &b[4];
    string g(begin, end);


    cout << a << endl;
    cout << b << endl;
    cout << c << endl;
    cout << d << endl;
    cout << e << endl;
    cout << f1 << endl;
    cout << f2 << endl;
    cout << g << endl;
    
}

/*
    Задачи:

        1)  Можно ли вызвать конструктор по умолчанию вот так?

                string a();


        2)  Создавая строку d мы использовали конструктор от числа и символа.
            Если бы мы перепутали положение аргументов и написали бы так:

                string d('q', 50);

            Это сработает или выдаст ошибку?
            Если сработает, то чему будет равна строка d в этом случае?


        3)  В конструкторе от std::string, первого индекса подстроки и размера подстроки.
            Если мы передадим большой размер, так что требуемая подстрока выйдет за пределы оригинальной строки,
            то приведёт ли это к ошибке или нет?
*/